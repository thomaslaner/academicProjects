#TEST AGENDA:
#exec_op, reg_write_mem, reg_write_wr can be ignored at the moment
#FLUSH
# 1)flush
#   causes the unit to store a nop to the pipeline registers
#ALU - NORMAL OPERATIONS
#   ALU_input:  information from op
#   ALU_output: stored into aluresult
#   pc_new_out should carry the branch target address which is calculated
#   signals with suffixes _in should be passed unchanged to signals _out
# 2)alusrc1 = '1' & alusrc2 = '0'
#   alu input 1 is passed immediate from op
# 3)alusrc1 = '0' & alusrc2 = '1'
#   alu input 2 is passed immediate from op
# 4)alusrc1 = '0' & alusrc2 = '0'
#   no input is immediate
# 5)alusrc1 = '1' & alusrc2 = '1'
#   alu input 1 and 2 are passed immediate from op
#STALL
# 6)stall
#   causes the stage not to save inputs into its internal registers
#BRANCHING
# 7)alusrc3 = '1' & alu_inputs equal
#   z is high if alu inputs are equal
#   pc_new_out should be equal to rs1 input + immediate
#   other signals with suffixes _in should be passed unchanged to _out
# 8)alusrc3 = '0' & alu_inputs not equal
#   z is low if alu inputs are not equal
#   pc_new_out should be equal to pc_in + immediate
#   other signals with suffixes _in should be passed unchanged to _out
#MEMORY
# 9)memory
#   data which should be written to memory has to be saved in wrdata
#   data which should be written to memory is stored in op_readdata2 (according to datapath)

#1) ALU - alusrc1 = '1' & alusrc2 = '0'
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
1
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#2) flush
#stall (1b)
1
#flush (1b)
1
#OP (used for controlling the ALU)
#op.aluop
ALU_NOP
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_B
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#3) ALU - alusrc1 = '0' & alusrc2 = '1'
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
1
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#4) ALU - alusrc1 = '0' & alusrc2 = '0'
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#5) ALU - alusrc1 = '1' & alusrc2 = '1'
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
1
#op.alusrc2 (1b - if immediate should be used for this input)
1
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#6) STALL
#stall (1b)
1
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
1
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00010
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_NOP
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#7) alusrc3 = '1' & alu_inputs not equal
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_SUB
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
1
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00011
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000111
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000100000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_CND
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#8) alusrc3 = '0' & alu_inputs are equal
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_SUB
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00011
#op.rs2 (5b - second register operand)
00001
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000011
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_CND
#memop_in.memread (1b)
0
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_W
#WBOP_IN
#wbop_in.rd (5b)
00000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA

#9 memory
#stall (1b)
0
#flush (1b)
0
#OP (used for controlling the ALU)
#op.aluop
ALU_ADD
#op.alusrc1 (1b - if immediate should be used for this input)
0
#op.alusrc2 (1b - if immediate should be used for this input)
0
#op.alusrc3 (1b - selecting new PC to be caluclated for jmp/branch)
0
#op.rs1 (5b - first register operand)
00001
#op.rs2 (5b - second register operand)
00001
#op.readdata1 (32b - data from first register file read port)
00000000000000000000000000000001
#op.readdata2 (32b - data from second register file read port)
00000000000000000000000000000011
#op.imm (32b - immediate value from instruction)
00000000000000000000000000011110
#PC_IN
#pc_in (16b)
0001000101001000
#MEMOP_IN
#memop_in.branch (branch_type)
BR_CND
#memop_in.memread (1b)
1
#memop_in.memwrite (1b)
0
#memop_in.memtype (memu_op_type)
MEM_B
#WBOP_IN
#wbop_in.rd (5b)
10000
#wbop_in.write (1b)
0
#wbop_in.src (wb_src_type)
WBS_ALU
#REG_WRITE_MEM - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_mem.write (1b)
0
#reg_write_mem.reg (5b)
ZERO_REG
#reg_write_mem.data (32b)
ZERO_DATA
#REG_WRITE_WR - IGNORED BECAUSE FORWARDING IS NOT IMPLEMENTED YET
#reg_write_wr.write (1b)
0
#reg_write_wr.reg (5b)
ZERO_REG
#reg_write_wr.data (32b)
ZERO_DATA
